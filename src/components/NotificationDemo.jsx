// // components/NotificationDemo.jsx - Component ƒë·ªÉ test h·ªá th·ªëng th√¥ng b√°o
// import React from "react";
// import { Button, Space, Card, Typography } from "antd";
// import { CheckCircle, Truck, PartyPopper, XCircle, Bell } from "lucide-react";
// import { useUserNotifications } from "../hooks/useUserNotifications";

// const { Title, Text } = Typography;

// const NotificationDemo = () => {
//   const {
//     addOrderConfirmedNotification,
//     addOrderInDeliveryNotification,
//     addOrderCompletedNotification,
//     addOrderCancelledNotification,
//     addSystemNotification,
//     triggerShake,
//     requestNotificationPermission,
//     toggleAudio,
//     audioEnabled,
//   } = useUserNotifications();

//   // Sample order data for testing
//   const sampleOrderData = {
//     id: Math.floor(Math.random() * 10000),
//     orderCode: `DH${Math.floor(Math.random() * 100000)}`,
//     totalPrice: Math.floor(Math.random() * 500000) + 50000,
//     items: [
//       { name: "Ph·ªü B√≤ T√°i", quantity: 1, price: 65000 },
//       { name: "Nem R√°n", quantity: 2, price: 15000 },
//     ],
//     receiverName: "Nguy·ªÖn VƒÉn A",
//     receiverPhone: "0987654321",
//     deliveryAddress: "123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM",
//   };

//   const handleTestOrderConfirmed = () => {
//     const orderData = {
//       ...sampleOrderData,
//       orderCode: `DH${Math.floor(Math.random() * 100000)}`,
//     };
//     addOrderConfirmedNotification(orderData);
//   };

//   const handleTestOrderInDelivery = () => {
//     const orderData = {
//       ...sampleOrderData,
//       orderCode: `DH${Math.floor(Math.random() * 100000)}`,
//     };
//     addOrderInDeliveryNotification(orderData);
//   };

//   const handleTestOrderCompleted = () => {
//     const orderData = {
//       ...sampleOrderData,
//       orderCode: `DH${Math.floor(Math.random() * 100000)}`,
//     };
//     addOrderCompletedNotification(orderData);
//   };

//   const handleTestOrderCancelled = () => {
//     const orderData = {
//       ...sampleOrderData,
//       orderCode: `DH${Math.floor(Math.random() * 100000)}`,
//     };
//     addOrderCancelledNotification(orderData);
//   };

//   const handleTestSystemNotification = () => {
//     addSystemNotification({
//       title: "Th√¥ng b√°o h·ªá th·ªëng",
//       message:
//         "H·ªá th·ªëng s·∫Ω b·∫£o tr√¨ v√†o 2:00 AM ng√†y mai. Vui l√≤ng ho√†n t·∫•t ƒë∆°n h√†ng tr∆∞·ªõc th·ªùi gian n√†y.",
//       priority: "medium",
//     });
//   };

//   const handleRequestPermission = async () => {
//     const granted = await requestNotificationPermission();
//     if (granted) {
//       console.log("‚úÖ Notification permission granted");
//     } else {
//       console.log("‚ùå Notification permission denied");
//     }
//   };

//   return (
//     <div className="p-6 max-w-4xl mx-auto">
//       <Card>
//         <Title level={3} className="mb-6 flex items-center">
//           <Bell className="mr-2" />
//           Demo H·ªá th·ªëng Th√¥ng b√°o
//         </Title>

//         <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
//           {/* Notification Tests */}
//           <div>
//             <Title level={4} className="mb-4">
//               Test Th√¥ng b√°o ƒê∆°n h√†ng
//             </Title>
//             <Space direction="vertical" size="middle" className="w-full">
//               <Button
//                 type="primary"
//                 icon={<CheckCircle className="w-4 h-4" />}
//                 onClick={handleTestOrderConfirmed}
//                 className="w-full flex items-center justify-center">
//                 <span className="ml-2">ƒê∆°n h√†ng ƒë∆∞·ª£c x√°c nh·∫≠n</span>
//               </Button>

//               <Button
//                 type="primary"
//                 icon={<Truck className="w-4 h-4" />}
//                 onClick={handleTestOrderInDelivery}
//                 className="w-full flex items-center justify-center bg-blue-500">
//                 <span className="ml-2">ƒê∆°n h√†ng ƒëang giao</span>
//               </Button>

//               <Button
//                 type="primary"
//                 icon={<PartyPopper className="w-4 h-4" />}
//                 onClick={handleTestOrderCompleted}
//                 className="w-full flex items-center justify-center bg-purple-500">
//                 <span className="ml-2">ƒê∆°n h√†ng ho√†n th√†nh</span>
//               </Button>

//               <Button
//                 danger
//                 icon={<XCircle className="w-4 h-4" />}
//                 onClick={handleTestOrderCancelled}
//                 className="w-full flex items-center justify-center">
//                 <span className="ml-2">ƒê∆°n h√†ng b·ªã h·ªßy</span>
//               </Button>

//               <Button
//                 type="default"
//                 icon={<Bell className="w-4 h-4" />}
//                 onClick={handleTestSystemNotification}
//                 className="w-full flex items-center justify-center">
//                 <span className="ml-2">Th√¥ng b√°o h·ªá th·ªëng</span>
//               </Button>
//             </Space>
//           </div>

//           {/* Settings Tests */}
//           <div>
//             <Title level={4} className="mb-4">
//               C√†i ƒë·∫∑t & Ki·ªÉm tra
//             </Title>
//             <Space direction="vertical" size="middle" className="w-full">
//               <div className="p-4 bg-gray-50 rounded-lg">
//                 <Text strong>Tr·∫°ng th√°i √¢m thanh:</Text>
//                 <div className="flex items-center justify-between mt-2">
//                   <Text>{audioEnabled ? "ƒê√£ b·∫≠t" : "ƒê√£ t·∫Øt"}</Text>
//                   <Button type="link" onClick={() => toggleAudio(!audioEnabled)} className="p-0">
//                     {audioEnabled ? "T·∫Øt" : "B·∫≠t"}
//                   </Button>
//                 </div>
//               </div>

//               <div className="p-4 bg-gray-50 rounded-lg">
//                 <Text strong>Quy·ªÅn th√¥ng b√°o:</Text>
//                 <div className="flex items-center justify-between mt-2">
//                   <Text>
//                     {Notification.permission === "granted"
//                       ? "ƒê√£ cho ph√©p"
//                       : Notification.permission === "denied"
//                       ? "ƒê√£ t·ª´ ch·ªëi"
//                       : "Ch∆∞a y√™u c·∫ßu"}
//                   </Text>
//                   {Notification.permission !== "granted" && (
//                     <Button type="link" onClick={handleRequestPermission} className="p-0">
//                       Y√™u c·∫ßu
//                     </Button>
//                   )}
//                 </div>
//               </div>

//               <Button type="dashed" onClick={triggerShake} className="w-full">
//                 Test Shake Animation
//               </Button>

//               <div className="p-4 bg-blue-50 rounded-lg">
//                 <Title level={5} className="mb-2">
//                   H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng:
//                 </Title>
//                 <ul className="text-sm space-y-1">
//                   <li>‚Ä¢ Click c√°c button tr√™n ƒë·ªÉ test th√¥ng b√°o</li>
//                   <li>‚Ä¢ Ki·ªÉm tra chu√¥ng th√¥ng b√°o ·ªü header</li>
//                   <li>‚Ä¢ Th·ª≠ c√°c t√≠nh nƒÉng ƒë√°nh d·∫•u ƒë√£ ƒë·ªçc</li>
//                   <li>‚Ä¢ Test responsive tr√™n mobile</li>
//                   <li>‚Ä¢ Ki·ªÉm tra browser notification</li>
//                 </ul>
//               </div>
//             </Space>
//           </div>
//         </div>

//         {/* Sample Order Data Display */}
//         <div className="mt-8 p-4 bg-gray-50 rounded-lg">
//           <Title level={5} className="mb-3">
//             D·ªØ li·ªáu ƒë∆°n h√†ng m·∫´u:
//           </Title>
//           <pre className="text-xs bg-white p-3 rounded border overflow-x-auto">
//             {JSON.stringify(sampleOrderData, null, 2)}
//           </pre>
//         </div>

//         {/* Instructions */}
//         <div className="mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
//           <Title level={5} className="text-yellow-800 mb-2">
//             üöÄ H∆∞·ªõng d·∫´n tri·ªÉn khai:
//           </Title>
//           <div className="text-sm text-yellow-700 space-y-2">
//             <p>
//               <strong>1. Backend Integration:</strong>
//             </p>
//             <ul className="ml-4 space-y-1">
//               <li>
//                 ‚Ä¢ Khi staff x√°c nh·∫≠n ƒë∆°n h√†ng, g·ª≠i WebSocket event: <code>orderConfirmed</code>
//               </li>
//               <li>
//                 ‚Ä¢ Khi b·∫Øt ƒë·∫ßu giao h√†ng, g·ª≠i: <code>orderInDelivery</code>
//               </li>
//               <li>
//                 ‚Ä¢ Khi ho√†n th√†nh, g·ª≠i: <code>orderCompleted</code>
//               </li>
//               <li>
//                 ‚Ä¢ Khi h·ªßy ƒë∆°n, g·ª≠i: <code>orderCancelled</code>
//               </li>
//             </ul>

//             <p>
//               <strong>2. WebSocket Event Format:</strong>
//             </p>
//             <pre className="bg-white p-2 rounded text-xs overflow-x-auto">
//               {`// Example event structure
// {
//   "eventType": "orderConfirmed",
//   "orderData": {
//     "id": 12345,
//     "orderCode": "DH67890",
//     "userId": 456,
//     "totalPrice": 150000,
//     "receiverName": "Nguy·ªÖn VƒÉn A",
//     "receiverPhone": "0987654321"
//   },
//   "timestamp": "2025-01-01T10:00:00Z",
//   "message": "ƒê∆°n h√†ng ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n"
// }`}
//             </pre>

//             <p>
//               <strong>3. Room Management:</strong>
//             </p>
//             <ul className="ml-4 space-y-1">
//               <li>
//                 ‚Ä¢ User join room: <code>user_ </code>
//               </li>
//               <li>
//                 ‚Ä¢ Staff join room: <code>staff_ </code>
//               </li>
//               <li>‚Ä¢ Emit events to specific user rooms</li>
//             </ul>
//           </div>
//         </div>
//       </Card>
//     </div>
//   );
// };

// export default NotificationDemo;
